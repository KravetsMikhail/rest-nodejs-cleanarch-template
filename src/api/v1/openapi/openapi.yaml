openapi: 3.0.1
info:
  title: REST API for Royalty
  version: v1
paths:
  /tasks:
    get:
      servers:
        - url: https://roualty.rasu.local/api/v1/
      description: Список задач
      tags:
        - tasks
      security:
        - authJWT:
          - read
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: Фильтр по наименованию
          example: задача1
        - in: query
          name: offset
          schema: 
            type: number
          required: false
          description: Смещение относительно начала списка задач
          example: 0
        - in: query
          name: limit
          schema:
            type: number
          required: false
          description: Количество строк в результирующей выборке
          example: 10
        - in: query
          name: sort
          schema:
            type: string
          required: false
          description: Поле сортировки результата
          example: name
        - in: query
          name: order
          schema:
            type: string
            enum:
              - desc
              - asc
          description: Тип сортировки (по возрастанию или убыванию)
          example: desc
      responses:
        '200':
          description: Выполнено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/task'
              examples:
                sample:
                  $ref: '#/components/examples/tasksExample'
        '400':
          description: Ошибка
          $ref: '#/components/responses/Error400'
        '401':
          description: Ошибка авторизации
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Ошибка сервера
    post:
      servers:
        - url: https://roualty.rasu.local/api/v1/
      summary: Добавление новой задачи
      description: >-
        Создает новую задачу из данных тела запроса
      tags:
        - tasks
      security:
        - authJWT:
          - read
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/task"
            examples:
              sample:
                $ref: "#/components/examples/taskExample"
      responses:
        '200':
          description: Выполнено
        '400':
          description: Ошибка
          $ref: '#/components/responses/Error400'
        '401':
          description: Ошибка авторизации
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Ошибка сервера
    delete:
      servers:
        - url: https://roualty.rasu.local/api/v1/
      description: Удаление задачи
      tags:
        - tasks
      security:
        - authJWT:
          - read
      parameters:
        - in: query
          name: id
          schema:
            type: number
          required: true
          description: id задачи
          example: 123
      responses:
        '200':
          description: Выполнено
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/task'
              examples:
                sample:
                  $ref: '#/components/examples/taskExample'
        '400':
          description: Ошибка
          $ref: '#/components/responses/Error400'
        '401':
          description: Ошибка авторизации
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Ошибка сервера
components:
  schemas:
    task:
      type: object
      properties:
        name:
          type: string
          nullable: false
        search:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        createdBy:
          type: string
          nullable: false
        updatedAt:
          type: string
          format: date-time
        updatedBy:
          type: string
          nullable: false
      additionalProperties: false
  securitySchemes:
    authJWT:
      type: http
      description: Авторизация JWT
      scheme: bearer
      bearerFormat: JWT
  examples:
    taskExample:
      summary: Пример объекта новой задачи
      value:
        id: 1
        name: задача 1
        search: задача 1 иванов петров
        createdAt: '2024-10-10T10:00:01'
        createdBy: Иванов
        updateAt: '2024-09-09T09:09:09'
        updateBy: Петров
    tasksExample:
      summary: Пример ответа на запрос списка задач
      value:
        - id: 1
          name: задача 1
          search: задача 1 иванов петров
          createdAt: '2024-10-10T10:00:01'
          createdBy: Иванов
          updateAt: '2024-09-09T09:09:09'
          updateBy: Петров
        - id: 2
          name: задача 2
          search: задача 2 сидоров травкин
          createdAt: '2024-10-10T10:00:01'
          createdBy: Травкин
          updateAt: '2024-09-09T09:09:09'
          updateBy: Сидоров
  responses:
    Unauthorized:
      description: Ошибка авторизации
      content:
        application/json:
          schema:
            properties:
              Error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                required:
                  - code
                  - message
    Error400:
      description: Ошибка
      content:
        application/json:
          schema:
            properties:
              Error:
                type: object
                properties:
                  code:
                    type: string
                  message:
                    type: string
                  stack:
                    type: string
                required:
                  - code
                  - message
security:
  - JWT: []
